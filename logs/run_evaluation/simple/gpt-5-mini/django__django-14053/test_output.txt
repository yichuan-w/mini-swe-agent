+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   django/contrib/staticfiles/storage.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 0027a62b0b3ec774b8abb3ef10b76f607793eb92
Author: SWE-bench <setup@swebench.config>
Date:   Wed Sep 10 11:44:44 2025 +0000

    SWE-bench
+ git -c core.fileMode=false diff 179ee13eb37348cd87169a198aec18fedccc8668
diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..9ed4e935d3 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -56,6 +56,7 @@ class HashedFilesMixin:
         super().__init__(*args, **kwargs)
         self._patterns = {}
         self.hashed_files = {}
+        yielded = set()
         for extension, patterns in self.patterns:
             for pattern in patterns:
                 if isinstance(pattern, (tuple, list)):
@@ -229,14 +230,18 @@ class HashedFilesMixin:
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            if name not in yielded:
+                yielded.add(name)
+                yield name, hashed_name, processed
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                if name not in yielded:
+                    yielded.add(name)
+                    yield name, hashed_name, processed
                 substitutions = substitutions or subst
 
             if not substitutions:
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: asgiref>=3.2.10 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0) (3.8.1)
Requirement already satisfied: pytz in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0) (2024.2)
Requirement already satisfied: sqlparse>=0.2.2 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from Django==4.0) (0.5.1)
Requirement already satisfied: typing-extensions>=4 in /opt/miniconda3/envs/testbed/lib/python3.8/site-packages (from asgiref>=3.2.10->Django==4.0) (4.12.2)
Building wheels for collected packages: Django
  Building editable for Django (pyproject.toml): started
  Building editable for Django (pyproject.toml): finished with status 'done'
  Created wheel for Django: filename=django-4.0-0.editable-py3-none-any.whl size=25589 sha256=b172e66cc33fa811794f21ef295d0451d84b5027e57463286215c9605c9981c4
  Stored in directory: /tmp/pip-ephem-wheel-cache-6ap160xg/wheels/b2/50/f1/218f2e9962a80d01a4b1297698978f9fb3b60056aa24343f24
Successfully built Django
Installing collected packages: Django
  Attempting uninstall: Django
    Found existing installation: Django 4.0
    Uninstalling Django-4.0:
      Successfully uninstalled Django-4.0
Successfully installed Django-4.0
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 179ee13eb37348cd87169a198aec18fedccc8668 tests/staticfiles_tests/test_storage.py
Updated 0 paths from b7fb8bd4e8
+ git apply -v -
Checking patch tests/staticfiles_tests/test_storage.py...
Applied patch tests/staticfiles_tests/test_storage.py cleanly.
+ : '>>>>> Start Test Output'
+ ./tests/runtests.py --verbosity 2 --settings=test_sqlite --parallel 1 staticfiles_tests.test_storage
test_file_change_after_collectstatic (staticfiles_tests.test_storage.TestCollectionHashedFilesCache) ... Testing against Django installed in '/testbed/django'
Importing application staticfiles_tests
Skipping setup of unused database(s): default, other.
System check identified no issues (0 silenced).
ERROR
test_clear_empties_manifest (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_css_import_case_insensitive (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_import_loop (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_import_replacement (staticfiles_tests.test_storage.TestCollectionManifestStorage)
See #18050 ... ERROR
test_intermediate_files (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_loaded_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_manifest_does_not_exist (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_manifest_does_not_ignore_permission_error (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_manifest_exists (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_missing_entry (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_parse_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_path_ignored_completely (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_path_with_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_path_with_querystring (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_path_with_querystring_and_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_post_processing (staticfiles_tests.test_storage.TestCollectionManifestStorage)
post_processing behaves correctly. ... ERROR
test_post_processing_failure (staticfiles_tests.test_storage.TestCollectionManifestStorage)
post_processing indicates the origin of the error when it fails. ... ERROR
test_template_tag_absolute (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_template_tag_absolute_root (staticfiles_tests.test_storage.TestCollectionManifestStorage)
Like test_template_tag_absolute, but for a file in STATIC_ROOT (#26249). ... ERROR
test_template_tag_deep_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_template_tag_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_template_tag_return (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_template_tag_url (staticfiles_tests.test_storage.TestCollectionManifestStorage) ... ERROR
test_hashed_name (staticfiles_tests.test_storage.TestCollectionNoneHashStorage) ... ERROR
test_template_tag_return (staticfiles_tests.test_storage.TestCollectionSimpleStorage) ... ERROR
test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionSimpleStorage) ... ERROR
test_multi_extension_patterns (staticfiles_tests.test_storage.TestExtraPatternsStorage)
With storage classes having several file extension patterns, only the ... ERROR
test_collect_static_files_default_permissions (staticfiles_tests.test_storage.TestStaticFilePermissions) ... ok
test_collect_static_files_permissions (staticfiles_tests.test_storage.TestStaticFilePermissions) ... ok
test_collect_static_files_subclass_of_static_storage (staticfiles_tests.test_storage.TestStaticFilePermissions) ... ok

======================================================================
ERROR: test_file_change_after_collectstatic (staticfiles_tests.test_storage.TestCollectionHashedFilesCache)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 530, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_clear_empties_manifest (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_css_import_case_insensitive (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_import_loop (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_import_replacement (staticfiles_tests.test_storage.TestCollectionManifestStorage)
See #18050
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_intermediate_files (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_loaded_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_manifest_does_not_exist (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_manifest_does_not_ignore_permission_error (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_manifest_exists (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_missing_entry (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_parse_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_path_ignored_completely (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_path_with_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_path_with_querystring (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_path_with_querystring_and_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_post_processing (staticfiles_tests.test_storage.TestCollectionManifestStorage)
post_processing behaves correctly.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_post_processing_failure (staticfiles_tests.test_storage.TestCollectionManifestStorage)
post_processing indicates the origin of the error when it fails.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_absolute (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_absolute_root (staticfiles_tests.test_storage.TestCollectionManifestStorage)
Like test_template_tag_absolute, but for a file in STATIC_ROOT (#26249).
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_deep_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_return (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_url (staticfiles_tests.test_storage.TestCollectionManifestStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 273, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 32, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_hashed_name (staticfiles_tests.test_storage.TestCollectionNoneHashStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_return (staticfiles_tests.test_storage.TestCollectionSimpleStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 407, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionSimpleStorage)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 407, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

======================================================================
ERROR: test_multi_extension_patterns (staticfiles_tests.test_storage.TestExtraPatternsStorage)
With storage classes having several file extension patterns, only the
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/testbed/tests/staticfiles_tests/test_storage.py", line 240, in setUp
    super().setUp()
  File "/testbed/tests/staticfiles_tests/cases.py", line 73, in setUp
    self.run_collectstatic()
  File "/testbed/tests/staticfiles_tests/cases.py", line 85, in run_collectstatic
    call_command('collectstatic', interactive=False, verbosity=verbosity,
  File "/testbed/django/core/management/__init__.py", line 181, in call_command
    return command.execute(*args, **defaults)
  File "/testbed/django/core/management/base.py", line 398, in execute
    output = self.handle(*args, **options)
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 187, in handle
    collected = self.collect()
  File "/testbed/django/contrib/staticfiles/management/commands/collectstatic.py", line 128, in collect
    for original_path, processed_path, processed in processor:
  File "/testbed/django/contrib/staticfiles/storage.py", line 404, in post_process
    yield from super().post_process(*args, **kwargs)
  File "/testbed/django/contrib/staticfiles/storage.py", line 233, in post_process
    if name not in yielded:
NameError: name 'yielded' is not defined

----------------------------------------------------------------------
Ran 32 tests in 0.627s

FAILED (errors=29)
+ : '>>>>> End Test Output'
+ git checkout 179ee13eb37348cd87169a198aec18fedccc8668 tests/staticfiles_tests/test_storage.py
Updated 1 path from b7fb8bd4e8
