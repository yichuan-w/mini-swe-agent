diff --git a/sphinx/ext/napoleon/docstring.py b/sphinx/ext/napoleon/docstring.py
index d8cb75a5f..61c87e43b 100644
--- a/sphinx/ext/napoleon/docstring.py
+++ b/sphinx/ext/napoleon/docstring.py
@@ -28,7 +28,11 @@ logger = logging.getLogger(__name__)
 
 _directive_regex = re.compile(r'\.\. \S+::')
 _google_section_regex = re.compile(r'^(\s|\w)+:\s*$')
-_google_typed_arg_regex = re.compile(r'(.+?)\(\s*(.*[^\s]+)\s*\)')
+# Match "name(type)" only when the closing parenthesis is at the end (or only
+# followed by whitespace). This avoids mis-parsing "type name" forms like
+# "dict(str, str) opc_meta" where the parentheses belong to the type, not to
+# a "(type)" after the parameter name.
+_google_typed_arg_regex = re.compile(r'(.+?)\(\s*(.*[^\\s]+)\s*\)\s*$')
 _numpy_section_regex = re.compile(r'^[=\-`:\'"~^_*+#<>]{2,}\s*$')
 _single_colon_regex = re.compile(r'(?<!:):(?!:)')
 _xref_or_code_regex = re.compile(
@@ -267,7 +271,7 @@ class GoogleDocstring:
             match = _google_typed_arg_regex.match(before)
             if match:
                 _name = match.group(1).strip()
-                _type = match.group(2)
+                _type = match.group(2).strip()
 
         _name = self._escape_args_and_kwargs(_name)
 
