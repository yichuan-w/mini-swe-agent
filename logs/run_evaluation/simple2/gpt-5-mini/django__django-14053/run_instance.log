2025-10-03 06:03:15,342 - INFO - Creating container for django__django-14053...
2025-10-03 06:03:15,471 - INFO - Container for django__django-14053 created: d87d7fc8b9679027c88f1ba61c293cb95edc455e3632ce3a54547d03939d374c
2025-10-03 06:03:16,041 - INFO - Container for django__django-14053 started: d87d7fc8b9679027c88f1ba61c293cb95edc455e3632ce3a54547d03939d374c
2025-10-03 06:03:16,041 - INFO - Intermediate patch for django__django-14053 written to logs/run_evaluation/simple2/gpt-5-mini/django__django-14053/patch.diff, now applying to container...
2025-10-03 06:03:16,149 - INFO - >>>>> Applied Patch:
Checking patch django/contrib/staticfiles/storage.py...
Applied patch django/contrib/staticfiles/storage.py cleanly.

2025-10-03 06:03:16,896 - INFO - Git diff before:
diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..8ff96db3fe 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -228,15 +228,22 @@ class HashedFilesMixin:
         ]
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
+        yielded = set()
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            # Only yield each original name once to avoid duplicate post-process records.
+            if name not in yielded:
+                yield name, hashed_name, processed
+                yielded.add(name)
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                # Only yield each original name once to avoid duplicate post-process records.
+                if name not in yielded:
+                    yield name, hashed_name, processed
+                    yielded.add(name)
                 substitutions = substitutions or subst
 
             if not substitutions:
2025-10-03 06:03:16,897 - INFO - Eval script for django__django-14053 written to logs/run_evaluation/simple2/gpt-5-mini/django__django-14053/eval.sh; copying to container...
2025-10-03 06:03:26,406 - INFO - Test runtime: 9.47 seconds
2025-10-03 06:03:26,406 - INFO - Test output for django__django-14053 written to logs/run_evaluation/simple2/gpt-5-mini/django__django-14053/test_output.txt
2025-10-03 06:03:26,466 - INFO - Git diff after:
diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py
index 494890cc23..8ff96db3fe 100644
--- a/django/contrib/staticfiles/storage.py
+++ b/django/contrib/staticfiles/storage.py
@@ -228,15 +228,22 @@ class HashedFilesMixin:
         ]
         # Do a single pass first. Post-process all files once, then repeat for
         # adjustable files.
+        yielded = set()
         for name, hashed_name, processed, _ in self._post_process(paths, adjustable_paths, hashed_files):
-            yield name, hashed_name, processed
+            # Only yield each original name once to avoid duplicate post-process records.
+            if name not in yielded:
+                yield name, hashed_name, processed
+                yielded.add(name)
 
         paths = {path: paths[path] for path in adjustable_paths}
 
         for i in range(self.max_post_process_passes):
             substitutions = False
             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):
-                yield name, hashed_name, processed
+                # Only yield each original name once to avoid duplicate post-process records.
+                if name not in yielded:
+                    yield name, hashed_name, processed
+                    yielded.add(name)
                 substitutions = substitutions or subst
 
             if not substitutions:
2025-10-03 06:03:26,466 - INFO - Grading answer for django__django-14053...
2025-10-03 06:03:26,467 - INFO - report: {'django__django-14053': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': True, 'tests_status': {'FAIL_TO_PASS': {'success': ['post_processing behaves correctly.'], 'failure': []}, 'PASS_TO_PASS': {'success': ['test_hashed_name (staticfiles_tests.test_storage.TestCollectionNoneHashStorage)', 'test_collect_static_files_default_permissions (staticfiles_tests.test_storage.TestStaticFilePermissions)', 'test_collect_static_files_permissions (staticfiles_tests.test_storage.TestStaticFilePermissions)', 'test_collect_static_files_subclass_of_static_storage (staticfiles_tests.test_storage.TestStaticFilePermissions)', 'With storage classes having several file extension patterns, only the', 'test_template_tag_return (staticfiles_tests.test_storage.TestCollectionSimpleStorage)', 'test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionSimpleStorage)', 'test_file_change_after_collectstatic (staticfiles_tests.test_storage.TestCollectionHashedFilesCache)', 'test_clear_empties_manifest (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_css_import_case_insensitive (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_import_loop (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'See #18050', 'test_intermediate_files (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_loaded_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_manifest_does_not_exist (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_manifest_does_not_ignore_permission_error (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_manifest_exists (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_missing_entry (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_parse_cache (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_path_ignored_completely (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_path_with_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_path_with_querystring (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_path_with_querystring_and_fragment (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'post_processing indicates the origin of the error when it fails.', 'test_template_tag_absolute (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'Like test_template_tag_absolute, but for a file in STATIC_ROOT (#26249).', 'test_template_tag_deep_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_template_tag_relative (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_template_tag_return (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_template_tag_simple_content (staticfiles_tests.test_storage.TestCollectionManifestStorage)', 'test_template_tag_url (staticfiles_tests.test_storage.TestCollectionManifestStorage)'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-14053: resolved: True
2025-10-03 06:03:26,467 - INFO - Attempting to stop container sweb.eval.django__django-14053.simple2...
2025-10-03 06:03:41,674 - INFO - Attempting to remove container sweb.eval.django__django-14053.simple2...
2025-10-03 06:03:41,694 - INFO - Container sweb.eval.django__django-14053.simple2 removed.
