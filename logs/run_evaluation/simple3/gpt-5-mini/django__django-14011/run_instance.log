2025-10-03 22:30:31,252 - INFO - Creating container for django__django-14011...
2025-10-03 22:30:31,549 - INFO - Container for django__django-14011 created: 381caa18945fefa1c0f4305addcb80f165338d88a8a9b634ea88273868653b63
2025-10-03 22:30:32,093 - INFO - Container for django__django-14011 started: 381caa18945fefa1c0f4305addcb80f165338d88a8a9b634ea88273868653b63
2025-10-03 22:30:32,094 - INFO - Intermediate patch for django__django-14011 written to logs/run_evaluation/simple3/gpt-5-mini/django__django-14011/patch.diff, now applying to container...
2025-10-03 22:30:32,201 - INFO - >>>>> Applied Patch:
Checking patch django/core/servers/basehttp.py...
Applied patch django/core/servers/basehttp.py cleanly.

2025-10-03 22:30:32,954 - INFO - Git diff before:
diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 14dab517c9..2ab8ae7f81 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -17,6 +17,7 @@ from django.core.exceptions import ImproperlyConfigured
 from django.core.handlers.wsgi import LimitedStream
 from django.core.wsgi import get_wsgi_application
 from django.utils.module_loading import import_string
+from django.db import connections
 
 __all__ = ('WSGIServer', 'WSGIRequestHandler')
 
@@ -117,6 +118,20 @@ class ServerHandler(simple_server.ServerHandler):
         self.get_stdin()._read_limited()
         super().close()
 
+    def run(self, *args, **kwargs):
+        """Run the WSGI application and ensure DB connections are closed.
+
+        Closing DB connections here prevents connections from leaking across
+        threaded request handlers which can interfere with test teardown.
+        """
+        try:
+            return super().run(*args, **kwargs)
+        finally:
+            try:
+                connections.close_all()
+            except Exception:
+                pass
+
 
 class WSGIRequestHandler(simple_server.WSGIRequestHandler):
     protocol_version = 'HTTP/1.1'
2025-10-03 22:30:32,955 - INFO - Eval script for django__django-14011 written to logs/run_evaluation/simple3/gpt-5-mini/django__django-14011/eval.sh; copying to container...
2025-10-03 22:30:40,779 - INFO - Test runtime: 7.77 seconds
2025-10-03 22:30:40,779 - INFO - Test output for django__django-14011 written to logs/run_evaluation/simple3/gpt-5-mini/django__django-14011/test_output.txt
2025-10-03 22:30:40,845 - INFO - Git diff after:
diff --git a/django/core/servers/basehttp.py b/django/core/servers/basehttp.py
index 14dab517c9..2ab8ae7f81 100644
--- a/django/core/servers/basehttp.py
+++ b/django/core/servers/basehttp.py
@@ -17,6 +17,7 @@ from django.core.exceptions import ImproperlyConfigured
 from django.core.handlers.wsgi import LimitedStream
 from django.core.wsgi import get_wsgi_application
 from django.utils.module_loading import import_string
+from django.db import connections
 
 __all__ = ('WSGIServer', 'WSGIRequestHandler')
 
@@ -117,6 +118,20 @@ class ServerHandler(simple_server.ServerHandler):
         self.get_stdin()._read_limited()
         super().close()
 
+    def run(self, *args, **kwargs):
+        """Run the WSGI application and ensure DB connections are closed.
+
+        Closing DB connections here prevents connections from leaking across
+        threaded request handlers which can interfere with test teardown.
+        """
+        try:
+            return super().run(*args, **kwargs)
+        finally:
+            try:
+                connections.close_all()
+            except Exception:
+                pass
+
 
 class WSGIRequestHandler(simple_server.WSGIRequestHandler):
     protocol_version = 'HTTP/1.1'
2025-10-03 22:30:40,845 - INFO - Grading answer for django__django-14011...
2025-10-03 22:30:40,846 - INFO - report: {'django__django-14011': {'patch_is_None': False, 'patch_exists': True, 'patch_successfully_applied': True, 'resolved': False, 'tests_status': {'FAIL_TO_PASS': {'success': [], 'failure': ['test_live_server_url_is_class_property (servers.tests.LiveServerAddress)', 'Data written to the database by a view can be read.', 'Fixtures are properly loaded and visible to the live server thread.', 'test_check_model_instance_from_subview (servers.tests.LiveServerThreadedTests)', 'test_view_calls_subview (servers.tests.LiveServerThreadedTests)', 'test_404 (servers.tests.LiveServerViews)', 'A HTTP 1.1 server is supposed to support keep-alive. Since our', 'test_environ (servers.tests.LiveServerViews)', 'test_keep_alive_connection_clears_previous_request_data (servers.tests.LiveServerViews)', 'See `test_closes_connection_without_content_length` for details. This', 'test_media_files (servers.tests.LiveServerViews)', 'LiveServerTestCase reports a 404 status code when HTTP client', 'Launched server serves with HTTP 1.1.', 'test_static_files (servers.tests.LiveServerViews)', 'test_view (servers.tests.LiveServerViews)', 'Each LiveServerTestCase binds to a unique port or fails to start a', "LiveServerTestCase.port customizes the server's port."]}, 'PASS_TO_PASS': {'success': ['test_set_up_class (servers.tests.LiveServerTestCaseSetupTest)', 'Contrast to'], 'failure': []}, 'FAIL_TO_FAIL': {'success': [], 'failure': []}, 'PASS_TO_FAIL': {'success': [], 'failure': []}}}}
Result for django__django-14011: resolved: False
2025-10-03 22:30:40,846 - INFO - Attempting to stop container sweb.eval.django__django-14011.simple3...
2025-10-03 22:30:56,081 - INFO - Attempting to remove container sweb.eval.django__django-14011.simple3...
2025-10-03 22:30:56,100 - INFO - Container sweb.eval.django__django-14011.simple3 removed.
